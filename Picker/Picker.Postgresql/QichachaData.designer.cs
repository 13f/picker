#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Picker.Postgresql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qichacha")]
	public partial class QichachaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQichachaCertificate(QichachaCertificate instance);
    partial void UpdateQichachaCertificate(QichachaCertificate instance);
    partial void DeleteQichachaCertificate(QichachaCertificate instance);
    partial void InsertQichachaWebsite(QichachaWebsite instance);
    partial void UpdateQichachaWebsite(QichachaWebsite instance);
    partial void DeleteQichachaWebsite(QichachaWebsite instance);
    partial void InsertQichachaCompany(QichachaCompany instance);
    partial void UpdateQichachaCompany(QichachaCompany instance);
    partial void DeleteQichachaCompany(QichachaCompany instance);
    partial void InsertQichachaCopyright(QichachaCopyright instance);
    partial void UpdateQichachaCopyright(QichachaCopyright instance);
    partial void DeleteQichachaCopyright(QichachaCopyright instance);
    partial void InsertQichachaInvest(QichachaInvest instance);
    partial void UpdateQichachaInvest(QichachaInvest instance);
    partial void DeleteQichachaInvest(QichachaInvest instance);
    partial void InsertQichachaPatent(QichachaPatent instance);
    partial void UpdateQichachaPatent(QichachaPatent instance);
    partial void DeleteQichachaPatent(QichachaPatent instance);
    partial void InsertQichachaSoftwareCopyright(QichachaSoftwareCopyright instance);
    partial void UpdateQichachaSoftwareCopyright(QichachaSoftwareCopyright instance);
    partial void DeleteQichachaSoftwareCopyright(QichachaSoftwareCopyright instance);
    partial void InsertQichachaTrademark(QichachaTrademark instance);
    partial void UpdateQichachaTrademark(QichachaTrademark instance);
    partial void DeleteQichachaTrademark(QichachaTrademark instance);
    partial void InsertQichachaAlbum(QichachaAlbum instance);
    partial void UpdateQichachaAlbum(QichachaAlbum instance);
    partial void DeleteQichachaAlbum(QichachaAlbum instance);
    partial void InsertQichachaCompanySearch(QichachaCompanySearch instance);
    partial void UpdateQichachaCompanySearch(QichachaCompanySearch instance);
    partial void DeleteQichachaCompanySearch(QichachaCompanySearch instance);
    #endregion
		
		public QichachaDataContext() : 
				base(global::Picker.Postgresql.Properties.Settings.Default.qichachaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QichachaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QichachaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QichachaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QichachaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<QichachaCertificate> QichachaCertificate
		{
			get
			{
				return this.GetTable<QichachaCertificate>();
			}
		}
		
		public System.Data.Linq.Table<QichachaWebsite> QichachaWebsite
		{
			get
			{
				return this.GetTable<QichachaWebsite>();
			}
		}
		
		public System.Data.Linq.Table<QichachaCompany> QichachaCompany
		{
			get
			{
				return this.GetTable<QichachaCompany>();
			}
		}
		
		public System.Data.Linq.Table<QichachaCopyright> QichachaCopyright
		{
			get
			{
				return this.GetTable<QichachaCopyright>();
			}
		}
		
		public System.Data.Linq.Table<QichachaInvest> QichachaInvest
		{
			get
			{
				return this.GetTable<QichachaInvest>();
			}
		}
		
		public System.Data.Linq.Table<QichachaPatent> QichachaPatent
		{
			get
			{
				return this.GetTable<QichachaPatent>();
			}
		}
		
		public System.Data.Linq.Table<QichachaSoftwareCopyright> QichachaSoftwareCopyright
		{
			get
			{
				return this.GetTable<QichachaSoftwareCopyright>();
			}
		}
		
		public System.Data.Linq.Table<QichachaTrademark> QichachaTrademark
		{
			get
			{
				return this.GetTable<QichachaTrademark>();
			}
		}
		
		public System.Data.Linq.Table<QichachaAlbum> QichachaAlbum
		{
			get
			{
				return this.GetTable<QichachaAlbum>();
			}
		}
		
		public System.Data.Linq.Table<QichachaCompanySearch> QichachaCompanySearch
		{
			get
			{
				return this.GetTable<QichachaCompanySearch>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QichachaCertificate")]
	public partial class QichachaCertificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _CertificateId;
		
		private string _CertificateType;
		
		private string _Applicant;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCertificateIdChanging(string value);
    partial void OnCertificateIdChanged();
    partial void OnCertificateTypeChanging(string value);
    partial void OnCertificateTypeChanged();
    partial void OnApplicantChanging(string value);
    partial void OnApplicantChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    #endregion
		
		public QichachaCertificate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="VarChar(50)")]
		public string CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateType", DbType="VarChar(50)")]
		public string CertificateType
		{
			get
			{
				return this._CertificateType;
			}
			set
			{
				if ((this._CertificateType != value))
				{
					this.OnCertificateTypeChanging(value);
					this.SendPropertyChanging();
					this._CertificateType = value;
					this.SendPropertyChanged("CertificateType");
					this.OnCertificateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Applicant", DbType="NVarChar(500)")]
		public string Applicant
		{
			get
			{
				return this._Applicant;
			}
			set
			{
				if ((this._Applicant != value))
				{
					this.OnApplicantChanging(value);
					this.SendPropertyChanging();
					this._Applicant = value;
					this.SendPropertyChanged("Applicant");
					this.OnApplicantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QichachaWebsite")]
	public partial class QichachaWebsite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Title;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    #endregion
		
		public QichachaWebsite()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1000)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QichachaCompany")]
	public partial class QichachaCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _RegNum;
		
		private string _OrgCode;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
		private System.Nullable<System.DateTime> _CertificateUpdated;
		
		private System.Nullable<System.DateTime> _CopyrightUpdated;
		
		private System.Nullable<System.DateTime> _SoftwareCopyrightUpdated;
		
		private System.Nullable<System.DateTime> _InvestUpdated;
		
		private System.Nullable<System.DateTime> _PatentUpdated;
		
		private System.Nullable<System.DateTime> _TrademarkUpdated;
		
		private System.Nullable<System.DateTime> _WebsiteUpdated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRegNumChanging(string value);
    partial void OnRegNumChanged();
    partial void OnOrgCodeChanging(string value);
    partial void OnOrgCodeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    partial void OnCertificateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCertificateUpdatedChanged();
    partial void OnCopyrightUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCopyrightUpdatedChanged();
    partial void OnSoftwareCopyrightUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnSoftwareCopyrightUpdatedChanged();
    partial void OnInvestUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnInvestUpdatedChanged();
    partial void OnPatentUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnPatentUpdatedChanged();
    partial void OnTrademarkUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnTrademarkUpdatedChanged();
    partial void OnWebsiteUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnWebsiteUpdatedChanged();
    #endregion
		
		public QichachaCompany()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNum", DbType="NVarChar(100)")]
		public string RegNum
		{
			get
			{
				return this._RegNum;
			}
			set
			{
				if ((this._RegNum != value))
				{
					this.OnRegNumChanging(value);
					this.SendPropertyChanging();
					this._RegNum = value;
					this.SendPropertyChanged("RegNum");
					this.OnRegNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="NVarChar(100)")]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this.OnOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._OrgCode = value;
					this.SendPropertyChanged("OrgCode");
					this.OnOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> CertificateUpdated
		{
			get
			{
				return this._CertificateUpdated;
			}
			set
			{
				if ((this._CertificateUpdated != value))
				{
					this.OnCertificateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._CertificateUpdated = value;
					this.SendPropertyChanged("CertificateUpdated");
					this.OnCertificateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopyrightUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> CopyrightUpdated
		{
			get
			{
				return this._CopyrightUpdated;
			}
			set
			{
				if ((this._CopyrightUpdated != value))
				{
					this.OnCopyrightUpdatedChanging(value);
					this.SendPropertyChanging();
					this._CopyrightUpdated = value;
					this.SendPropertyChanged("CopyrightUpdated");
					this.OnCopyrightUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoftwareCopyrightUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> SoftwareCopyrightUpdated
		{
			get
			{
				return this._SoftwareCopyrightUpdated;
			}
			set
			{
				if ((this._SoftwareCopyrightUpdated != value))
				{
					this.OnSoftwareCopyrightUpdatedChanging(value);
					this.SendPropertyChanging();
					this._SoftwareCopyrightUpdated = value;
					this.SendPropertyChanged("SoftwareCopyrightUpdated");
					this.OnSoftwareCopyrightUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvestUpdated
		{
			get
			{
				return this._InvestUpdated;
			}
			set
			{
				if ((this._InvestUpdated != value))
				{
					this.OnInvestUpdatedChanging(value);
					this.SendPropertyChanging();
					this._InvestUpdated = value;
					this.SendPropertyChanged("InvestUpdated");
					this.OnInvestUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatentUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> PatentUpdated
		{
			get
			{
				return this._PatentUpdated;
			}
			set
			{
				if ((this._PatentUpdated != value))
				{
					this.OnPatentUpdatedChanging(value);
					this.SendPropertyChanging();
					this._PatentUpdated = value;
					this.SendPropertyChanged("PatentUpdated");
					this.OnPatentUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrademarkUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrademarkUpdated
		{
			get
			{
				return this._TrademarkUpdated;
			}
			set
			{
				if ((this._TrademarkUpdated != value))
				{
					this.OnTrademarkUpdatedChanging(value);
					this.SendPropertyChanging();
					this._TrademarkUpdated = value;
					this.SendPropertyChanged("TrademarkUpdated");
					this.OnTrademarkUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> WebsiteUpdated
		{
			get
			{
				return this._WebsiteUpdated;
			}
			set
			{
				if ((this._WebsiteUpdated != value))
				{
					this.OnWebsiteUpdatedChanging(value);
					this.SendPropertyChanging();
					this._WebsiteUpdated = value;
					this.SendPropertyChanged("WebsiteUpdated");
					this.OnWebsiteUpdatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QichachaCopyright")]
	public partial class QichachaCopyright : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Title;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    #endregion
		
		public QichachaCopyright()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1000)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QichachaInvest")]
	public partial class QichachaInvest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _InvestorId;
		
		private string _InvestorName;
		
		private string _TargetId;
		
		private string _TargetName;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvestorIdChanging(string value);
    partial void OnInvestorIdChanged();
    partial void OnInvestorNameChanging(string value);
    partial void OnInvestorNameChanged();
    partial void OnTargetIdChanging(string value);
    partial void OnTargetIdChanged();
    partial void OnTargetNameChanging(string value);
    partial void OnTargetNameChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    #endregion
		
		public QichachaInvest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestorId", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string InvestorId
		{
			get
			{
				return this._InvestorId;
			}
			set
			{
				if ((this._InvestorId != value))
				{
					this.OnInvestorIdChanging(value);
					this.SendPropertyChanging();
					this._InvestorId = value;
					this.SendPropertyChanged("InvestorId");
					this.OnInvestorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestorName", DbType="NVarChar(500)")]
		public string InvestorName
		{
			get
			{
				return this._InvestorName;
			}
			set
			{
				if ((this._InvestorName != value))
				{
					this.OnInvestorNameChanging(value);
					this.SendPropertyChanging();
					this._InvestorName = value;
					this.SendPropertyChanged("InvestorName");
					this.OnInvestorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetId", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TargetId
		{
			get
			{
				return this._TargetId;
			}
			set
			{
				if ((this._TargetId != value))
				{
					this.OnTargetIdChanging(value);
					this.SendPropertyChanging();
					this._TargetId = value;
					this.SendPropertyChanged("TargetId");
					this.OnTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetName", DbType="NVarChar(500)")]
		public string TargetName
		{
			get
			{
				return this._TargetName;
			}
			set
			{
				if ((this._TargetName != value))
				{
					this.OnTargetNameChanging(value);
					this.SendPropertyChanging();
					this._TargetName = value;
					this.SendPropertyChanged("TargetName");
					this.OnTargetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QichachaPatent")]
	public partial class QichachaPatent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _PatentId;
		
		private string _PatentType;
		
		private string _Applicant;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnPatentIdChanging(string value);
    partial void OnPatentIdChanged();
    partial void OnPatentTypeChanging(string value);
    partial void OnPatentTypeChanged();
    partial void OnApplicantChanging(string value);
    partial void OnApplicantChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    #endregion
		
		public QichachaPatent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatentId", DbType="VarChar(50)")]
		public string PatentId
		{
			get
			{
				return this._PatentId;
			}
			set
			{
				if ((this._PatentId != value))
				{
					this.OnPatentIdChanging(value);
					this.SendPropertyChanging();
					this._PatentId = value;
					this.SendPropertyChanged("PatentId");
					this.OnPatentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatentType", DbType="VarChar(50)")]
		public string PatentType
		{
			get
			{
				return this._PatentType;
			}
			set
			{
				if ((this._PatentType != value))
				{
					this.OnPatentTypeChanging(value);
					this.SendPropertyChanging();
					this._PatentType = value;
					this.SendPropertyChanged("PatentType");
					this.OnPatentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Applicant", DbType="NVarChar(500)")]
		public string Applicant
		{
			get
			{
				return this._Applicant;
			}
			set
			{
				if ((this._Applicant != value))
				{
					this.OnApplicantChanging(value);
					this.SendPropertyChanging();
					this._Applicant = value;
					this.SendPropertyChanged("Applicant");
					this.OnApplicantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QichachaSoftwareCopyright")]
	public partial class QichachaSoftwareCopyright : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Title;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    #endregion
		
		public QichachaSoftwareCopyright()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1000)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QichachaTrademark")]
	public partial class QichachaTrademark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _RegNo;
		
		private string _Applicant;
		
		private string _Content;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnRegNoChanging(string value);
    partial void OnRegNoChanged();
    partial void OnApplicantChanging(string value);
    partial void OnApplicantChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    #endregion
		
		public QichachaTrademark()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegNo", DbType="VarChar(50)")]
		public string RegNo
		{
			get
			{
				return this._RegNo;
			}
			set
			{
				if ((this._RegNo != value))
				{
					this.OnRegNoChanging(value);
					this.SendPropertyChanging();
					this._RegNo = value;
					this.SendPropertyChanged("RegNo");
					this.OnRegNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Applicant", DbType="NVarChar(500)")]
		public string Applicant
		{
			get
			{
				return this._Applicant;
			}
			set
			{
				if ((this._Applicant != value))
				{
					this.OnApplicantChanging(value);
					this.SendPropertyChanging();
					this._Applicant = value;
					this.SendPropertyChanged("Applicant");
					this.OnApplicantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QichachaAlbum")]
	public partial class QichachaAlbum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Uri;
		
		private int _Id;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _ModifiedAt;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUriChanging(string value);
    partial void OnUriChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnModifiedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedAtChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    #endregion
		
		public QichachaAlbum()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uri", DbType="VarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Uri
		{
			get
			{
				return this._Uri;
			}
			set
			{
				if ((this._Uri != value))
				{
					this.OnUriChanging(value);
					this.SendPropertyChanging();
					this._Uri = value;
					this.SendPropertyChanged("Uri");
					this.OnUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedAt
		{
			get
			{
				return this._ModifiedAt;
			}
			set
			{
				if ((this._ModifiedAt != value))
				{
					this.OnModifiedAtChanging(value);
					this.SendPropertyChanging();
					this._ModifiedAt = value;
					this.SendPropertyChanged("ModifiedAt");
					this.OnModifiedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QichachaCompanySearch")]
	public partial class QichachaCompanySearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Keyword;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private int _ProcessedPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeywordChanging(string value);
    partial void OnKeywordChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedPageChanging(int value);
    partial void OnProcessedPageChanged();
    #endregion
		
		public QichachaCompanySearch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keyword", DbType="NVarChar(400) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Keyword
		{
			get
			{
				return this._Keyword;
			}
			set
			{
				if ((this._Keyword != value))
				{
					this.OnKeywordChanging(value);
					this.SendPropertyChanging();
					this._Keyword = value;
					this.SendPropertyChanged("Keyword");
					this.OnKeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedPage", DbType="Int NOT NULL")]
		public int ProcessedPage
		{
			get
			{
				return this._ProcessedPage;
			}
			set
			{
				if ((this._ProcessedPage != value))
				{
					this.OnProcessedPageChanging(value);
					this.SendPropertyChanging();
					this._ProcessedPage = value;
					this.SendPropertyChanged("ProcessedPage");
					this.OnProcessedPageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
