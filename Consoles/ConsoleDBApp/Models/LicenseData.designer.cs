#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleDBApp.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="chuci_license")]
	public partial class LicenseDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertInfantMilkPowderFormula(InfantMilkPowderFormula instance);
    partial void UpdateInfantMilkPowderFormula(InfantMilkPowderFormula instance);
    partial void DeleteInfantMilkPowderFormula(InfantMilkPowderFormula instance);
    #endregion
		
		public LicenseDataDataContext() : 
				base(global::ConsoleDBApp.Properties.Settings.Default.chuci_licenseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<InfantMilkPowderFormula> InfantMilkPowderFormula
		{
			get
			{
				return this.GetTable<InfantMilkPowderFormula>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InfantMilkPowderFormula")]
	public partial class InfantMilkPowderFormula : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _ProductGeneralName;
		
		private string _ProductChineseName;
		
		private string _ProductEnglishName;
		
		private string _CompanyChineseName;
		
		private string _CompanyEnglishName;
		
		private string _LegalEntity;
		
		private string _ManufacturingSite;
		
		private string _Conclusion;
		
		private string _ProductionProcess;
		
		private string _Remark;
		
		private string _NutritionData;
		
		private string _CheckId;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnProductGeneralNameChanging(string value);
    partial void OnProductGeneralNameChanged();
    partial void OnProductChineseNameChanging(string value);
    partial void OnProductChineseNameChanged();
    partial void OnProductEnglishNameChanging(string value);
    partial void OnProductEnglishNameChanged();
    partial void OnCompanyChineseNameChanging(string value);
    partial void OnCompanyChineseNameChanged();
    partial void OnCompanyEnglishNameChanging(string value);
    partial void OnCompanyEnglishNameChanged();
    partial void OnLegalEntityChanging(string value);
    partial void OnLegalEntityChanged();
    partial void OnManufacturingSiteChanging(string value);
    partial void OnManufacturingSiteChanged();
    partial void OnConclusionChanging(string value);
    partial void OnConclusionChanged();
    partial void OnProductionProcessChanging(string value);
    partial void OnProductionProcessChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnNutritionDataChanging(string value);
    partial void OnNutritionDataChanged();
    partial void OnCheckIdChanging(string value);
    partial void OnCheckIdChanged();
    #endregion
		
		public InfantMilkPowderFormula()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGeneralName", DbType="NVarChar(100)")]
		public string ProductGeneralName
		{
			get
			{
				return this._ProductGeneralName;
			}
			set
			{
				if ((this._ProductGeneralName != value))
				{
					this.OnProductGeneralNameChanging(value);
					this.SendPropertyChanging();
					this._ProductGeneralName = value;
					this.SendPropertyChanged("ProductGeneralName");
					this.OnProductGeneralNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductChineseName", DbType="NVarChar(100)")]
		public string ProductChineseName
		{
			get
			{
				return this._ProductChineseName;
			}
			set
			{
				if ((this._ProductChineseName != value))
				{
					this.OnProductChineseNameChanging(value);
					this.SendPropertyChanging();
					this._ProductChineseName = value;
					this.SendPropertyChanged("ProductChineseName");
					this.OnProductChineseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductEnglishName", DbType="NVarChar(100)")]
		public string ProductEnglishName
		{
			get
			{
				return this._ProductEnglishName;
			}
			set
			{
				if ((this._ProductEnglishName != value))
				{
					this.OnProductEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._ProductEnglishName = value;
					this.SendPropertyChanged("ProductEnglishName");
					this.OnProductEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyChineseName", DbType="NVarChar(100)")]
		public string CompanyChineseName
		{
			get
			{
				return this._CompanyChineseName;
			}
			set
			{
				if ((this._CompanyChineseName != value))
				{
					this.OnCompanyChineseNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyChineseName = value;
					this.SendPropertyChanged("CompanyChineseName");
					this.OnCompanyChineseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyEnglishName", DbType="NVarChar(100)")]
		public string CompanyEnglishName
		{
			get
			{
				return this._CompanyEnglishName;
			}
			set
			{
				if ((this._CompanyEnglishName != value))
				{
					this.OnCompanyEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyEnglishName = value;
					this.SendPropertyChanged("CompanyEnglishName");
					this.OnCompanyEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegalEntity", DbType="NVarChar(100)")]
		public string LegalEntity
		{
			get
			{
				return this._LegalEntity;
			}
			set
			{
				if ((this._LegalEntity != value))
				{
					this.OnLegalEntityChanging(value);
					this.SendPropertyChanging();
					this._LegalEntity = value;
					this.SendPropertyChanged("LegalEntity");
					this.OnLegalEntityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturingSite", DbType="NVarChar(500)")]
		public string ManufacturingSite
		{
			get
			{
				return this._ManufacturingSite;
			}
			set
			{
				if ((this._ManufacturingSite != value))
				{
					this.OnManufacturingSiteChanging(value);
					this.SendPropertyChanging();
					this._ManufacturingSite = value;
					this.SendPropertyChanged("ManufacturingSite");
					this.OnManufacturingSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conclusion", DbType="NVarChar(500)")]
		public string Conclusion
		{
			get
			{
				return this._Conclusion;
			}
			set
			{
				if ((this._Conclusion != value))
				{
					this.OnConclusionChanging(value);
					this.SendPropertyChanging();
					this._Conclusion = value;
					this.SendPropertyChanged("Conclusion");
					this.OnConclusionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionProcess", DbType="NVarChar(500)")]
		public string ProductionProcess
		{
			get
			{
				return this._ProductionProcess;
			}
			set
			{
				if ((this._ProductionProcess != value))
				{
					this.OnProductionProcessChanging(value);
					this.SendPropertyChanging();
					this._ProductionProcess = value;
					this.SendPropertyChanged("ProductionProcess");
					this.OnProductionProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NutritionData", DbType="NVarChar(MAX)")]
		public string NutritionData
		{
			get
			{
				return this._NutritionData;
			}
			set
			{
				if ((this._NutritionData != value))
				{
					this.OnNutritionDataChanging(value);
					this.SendPropertyChanging();
					this._NutritionData = value;
					this.SendPropertyChanged("NutritionData");
					this.OnNutritionDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckId", DbType="NVarChar(50)")]
		public string CheckId
		{
			get
			{
				return this._CheckId;
			}
			set
			{
				if ((this._CheckId != value))
				{
					this.OnCheckIdChanging(value);
					this.SendPropertyChanging();
					this._CheckId = value;
					this.SendPropertyChanged("CheckId");
					this.OnCheckIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
