#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleDBApp.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qichacha")]
	public partial class CpbzDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertArea(Area instance);
    partial void UpdateArea(Area instance);
    partial void DeleteArea(Area instance);
    partial void InsertCpbzCompanyTask(CpbzCompanyTask instance);
    partial void UpdateCpbzCompanyTask(CpbzCompanyTask instance);
    partial void DeleteCpbzCompanyTask(CpbzCompanyTask instance);
    partial void InsertCpbzStandard(CpbzStandard instance);
    partial void UpdateCpbzStandard(CpbzStandard instance);
    partial void DeleteCpbzStandard(CpbzStandard instance);
    #endregion
		
		public CpbzDataContext() : 
				base(global::ConsoleDBApp.Properties.Settings.Default.qichachaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CpbzDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CpbzDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CpbzDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CpbzDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Area> Area
		{
			get
			{
				return this.GetTable<Area>();
			}
		}
		
		public System.Data.Linq.Table<CpbzCompanyTask> CpbzCompanyTask
		{
			get
			{
				return this.GetTable<CpbzCompanyTask>();
			}
		}
		
		public System.Data.Linq.Table<CpbzStandard> CpbzStandard
		{
			get
			{
				return this.GetTable<CpbzStandard>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Area")]
	public partial class Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _QichachaProcessedAt;
		
		private System.Nullable<System.DateTime> _CpbzProcessedAt;
		
		private int _QichachaProcessedPage;
		
		private int _CpbzProcessedPage;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnQichachaProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnQichachaProcessedAtChanged();
    partial void OnCpbzProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCpbzProcessedAtChanged();
    partial void OnQichachaProcessedPageChanging(int value);
    partial void OnQichachaProcessedPageChanged();
    partial void OnCpbzProcessedPageChanging(int value);
    partial void OnCpbzProcessedPageChanged();
    #endregion
		
		public Area()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QichachaProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> QichachaProcessedAt
		{
			get
			{
				return this._QichachaProcessedAt;
			}
			set
			{
				if ((this._QichachaProcessedAt != value))
				{
					this.OnQichachaProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._QichachaProcessedAt = value;
					this.SendPropertyChanged("QichachaProcessedAt");
					this.OnQichachaProcessedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CpbzProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CpbzProcessedAt
		{
			get
			{
				return this._CpbzProcessedAt;
			}
			set
			{
				if ((this._CpbzProcessedAt != value))
				{
					this.OnCpbzProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._CpbzProcessedAt = value;
					this.SendPropertyChanged("CpbzProcessedAt");
					this.OnCpbzProcessedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QichachaProcessedPage", DbType="Int NOT NULL")]
		public int QichachaProcessedPage
		{
			get
			{
				return this._QichachaProcessedPage;
			}
			set
			{
				if ((this._QichachaProcessedPage != value))
				{
					this.OnQichachaProcessedPageChanging(value);
					this.SendPropertyChanging();
					this._QichachaProcessedPage = value;
					this.SendPropertyChanged("QichachaProcessedPage");
					this.OnQichachaProcessedPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CpbzProcessedPage", DbType="Int NOT NULL")]
		public int CpbzProcessedPage
		{
			get
			{
				return this._CpbzProcessedPage;
			}
			set
			{
				if ((this._CpbzProcessedPage != value))
				{
					this.OnCpbzProcessedPageChanging(value);
					this.SendPropertyChanging();
					this._CpbzProcessedPage = value;
					this.SendPropertyChanged("CpbzProcessedPage");
					this.OnCpbzProcessedPageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CpbzCompanyTask")]
	public partial class CpbzCompanyTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrgCode;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private string _Content;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgCodeChanging(string value);
    partial void OnOrgCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    #endregion
		
		public CpbzCompanyTask()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this.OnOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._OrgCode = value;
					this.SendPropertyChanged("OrgCode");
					this.OnOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CpbzStandard")]
	public partial class CpbzStandard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrgCode;
		
		private int _StandardId;
		
		private string _StandardCode;
		
		private System.Nullable<System.DateTime> _OpenedAt;
		
		private string _Content;
		
		private System.DateTime _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
		private string _Votum;
		
		private string _StandardName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgCodeChanging(string value);
    partial void OnOrgCodeChanged();
    partial void OnStandardIdChanging(int value);
    partial void OnStandardIdChanged();
    partial void OnStandardCodeChanging(string value);
    partial void OnStandardCodeChanged();
    partial void OnOpenedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnOpenedAtChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    partial void OnVotumChanging(string value);
    partial void OnVotumChanged();
    partial void OnStandardNameChanging(string value);
    partial void OnStandardNameChanged();
    #endregion
		
		public CpbzStandard()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrgCode
		{
			get
			{
				return this._OrgCode;
			}
			set
			{
				if ((this._OrgCode != value))
				{
					this.OnOrgCodeChanging(value);
					this.SendPropertyChanging();
					this._OrgCode = value;
					this.SendPropertyChanged("OrgCode");
					this.OnOrgCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardId", DbType="Int NOT NULL")]
		public int StandardId
		{
			get
			{
				return this._StandardId;
			}
			set
			{
				if ((this._StandardId != value))
				{
					this.OnStandardIdChanging(value);
					this.SendPropertyChanging();
					this._StandardId = value;
					this.SendPropertyChanged("StandardId");
					this.OnStandardIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StandardCode
		{
			get
			{
				return this._StandardCode;
			}
			set
			{
				if ((this._StandardCode != value))
				{
					this.OnStandardCodeChanging(value);
					this.SendPropertyChanging();
					this._StandardCode = value;
					this.SendPropertyChanged("StandardCode");
					this.OnStandardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> OpenedAt
		{
			get
			{
				return this._OpenedAt;
			}
			set
			{
				if ((this._OpenedAt != value))
				{
					this.OnOpenedAtChanging(value);
					this.SendPropertyChanging();
					this._OpenedAt = value;
					this.SendPropertyChanged("OpenedAt");
					this.OnOpenedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Votum", DbType="NVarChar(1000)")]
		public string Votum
		{
			get
			{
				return this._Votum;
			}
			set
			{
				if ((this._Votum != value))
				{
					this.OnVotumChanging(value);
					this.SendPropertyChanging();
					this._Votum = value;
					this.SendPropertyChanged("Votum");
					this.OnVotumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardName", DbType="NVarChar(500)")]
		public string StandardName
		{
			get
			{
				return this._StandardName;
			}
			set
			{
				if ((this._StandardName != value))
				{
					this.OnStandardNameChanging(value);
					this.SendPropertyChanging();
					this._StandardName = value;
					this.SendPropertyChanged("StandardName");
					this.OnStandardNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
