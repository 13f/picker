#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleDBApp.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sac")]
	public partial class SacDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSACChinaStandard(SACChinaStandard instance);
    partial void UpdateSACChinaStandard(SACChinaStandard instance);
    partial void DeleteSACChinaStandard(SACChinaStandard instance);
    partial void InsertSACQueryState(SACQueryState instance);
    partial void UpdateSACQueryState(SACQueryState instance);
    partial void DeleteSACQueryState(SACQueryState instance);
    #endregion
		
		public SacDataContext() : 
				base(global::ConsoleDBApp.Properties.Settings.Default.sacConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SacDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SacDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SacDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SacDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SACChinaStandard> SACChinaStandard
		{
			get
			{
				return this.GetTable<SACChinaStandard>();
			}
		}
		
		public System.Data.Linq.Table<SACQueryState> SACQueryState
		{
			get
			{
				return this.GetTable<SACQueryState>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SACChinaStandard")]
	public partial class SACChinaStandard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StandardCode;
		
		private string _ChineseTitle;
		
		private string _EnglishTitle;
		
		private string _ICS;
		
		private string _CCS;
		
		private string _Content;
		
		private string _Remark;
		
		private System.DateTime _IssuanceDate;
		
		private System.Nullable<System.DateTime> _ExecuteDate;
		
		private System.Nullable<System.DateTime> _RevocatoryDate;
		
		private bool _Revocative;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<System.DateTime> _ProcessedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStandardCodeChanging(string value);
    partial void OnStandardCodeChanged();
    partial void OnChineseTitleChanging(string value);
    partial void OnChineseTitleChanged();
    partial void OnEnglishTitleChanging(string value);
    partial void OnEnglishTitleChanged();
    partial void OnICSChanging(string value);
    partial void OnICSChanged();
    partial void OnCCSChanging(string value);
    partial void OnCCSChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnIssuanceDateChanging(System.DateTime value);
    partial void OnIssuanceDateChanged();
    partial void OnExecuteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExecuteDateChanged();
    partial void OnRevocatoryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRevocatoryDateChanged();
    partial void OnRevocativeChanging(bool value);
    partial void OnRevocativeChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessedAtChanged();
    #endregion
		
		public SACChinaStandard()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardCode", DbType="NVarChar(300) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StandardCode
		{
			get
			{
				return this._StandardCode;
			}
			set
			{
				if ((this._StandardCode != value))
				{
					this.OnStandardCodeChanging(value);
					this.SendPropertyChanging();
					this._StandardCode = value;
					this.SendPropertyChanged("StandardCode");
					this.OnStandardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChineseTitle", DbType="NVarChar(500)")]
		public string ChineseTitle
		{
			get
			{
				return this._ChineseTitle;
			}
			set
			{
				if ((this._ChineseTitle != value))
				{
					this.OnChineseTitleChanging(value);
					this.SendPropertyChanging();
					this._ChineseTitle = value;
					this.SendPropertyChanged("ChineseTitle");
					this.OnChineseTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishTitle", DbType="NVarChar(500)")]
		public string EnglishTitle
		{
			get
			{
				return this._EnglishTitle;
			}
			set
			{
				if ((this._EnglishTitle != value))
				{
					this.OnEnglishTitleChanging(value);
					this.SendPropertyChanging();
					this._EnglishTitle = value;
					this.SendPropertyChanged("EnglishTitle");
					this.OnEnglishTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICS", DbType="NVarChar(100)")]
		public string ICS
		{
			get
			{
				return this._ICS;
			}
			set
			{
				if ((this._ICS != value))
				{
					this.OnICSChanging(value);
					this.SendPropertyChanging();
					this._ICS = value;
					this.SendPropertyChanged("ICS");
					this.OnICSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCS", DbType="NVarChar(100)")]
		public string CCS
		{
			get
			{
				return this._CCS;
			}
			set
			{
				if ((this._CCS != value))
				{
					this.OnCCSChanging(value);
					this.SendPropertyChanging();
					this._CCS = value;
					this.SendPropertyChanged("CCS");
					this.OnCCSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuanceDate", DbType="Date NOT NULL")]
		public System.DateTime IssuanceDate
		{
			get
			{
				return this._IssuanceDate;
			}
			set
			{
				if ((this._IssuanceDate != value))
				{
					this.OnIssuanceDateChanging(value);
					this.SendPropertyChanging();
					this._IssuanceDate = value;
					this.SendPropertyChanged("IssuanceDate");
					this.OnIssuanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecuteDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExecuteDate
		{
			get
			{
				return this._ExecuteDate;
			}
			set
			{
				if ((this._ExecuteDate != value))
				{
					this.OnExecuteDateChanging(value);
					this.SendPropertyChanging();
					this._ExecuteDate = value;
					this.SendPropertyChanged("ExecuteDate");
					this.OnExecuteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevocatoryDate", DbType="Date")]
		public System.Nullable<System.DateTime> RevocatoryDate
		{
			get
			{
				return this._RevocatoryDate;
			}
			set
			{
				if ((this._RevocatoryDate != value))
				{
					this.OnRevocatoryDateChanging(value);
					this.SendPropertyChanging();
					this._RevocatoryDate = value;
					this.SendPropertyChanged("RevocatoryDate");
					this.OnRevocatoryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revocative", DbType="Bit NOT NULL")]
		public bool Revocative
		{
			get
			{
				return this._Revocative;
			}
			set
			{
				if ((this._Revocative != value))
				{
					this.OnRevocativeChanging(value);
					this.SendPropertyChanging();
					this._Revocative = value;
					this.SendPropertyChanged("Revocative");
					this.OnRevocativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessedAt
		{
			get
			{
				return this._ProcessedAt;
			}
			set
			{
				if ((this._ProcessedAt != value))
				{
					this.OnProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._ProcessedAt = value;
					this.SendPropertyChanged("ProcessedAt");
					this.OnProcessedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SACQueryState")]
	public partial class SACQueryState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Uri;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _UpdatedAt;
		
		private System.Nullable<int> _ProcessedPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUriChanging(string value);
    partial void OnUriChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnUpdatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedAtChanged();
    partial void OnProcessedPageChanging(System.Nullable<int> value);
    partial void OnProcessedPageChanged();
    #endregion
		
		public SACQueryState()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uri", DbType="NVarChar(450) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Uri
		{
			get
			{
				return this._Uri;
			}
			set
			{
				if ((this._Uri != value))
				{
					this.OnUriChanging(value);
					this.SendPropertyChanging();
					this._Uri = value;
					this.SendPropertyChanged("Uri");
					this.OnUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedAt
		{
			get
			{
				return this._UpdatedAt;
			}
			set
			{
				if ((this._UpdatedAt != value))
				{
					this.OnUpdatedAtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedAt = value;
					this.SendPropertyChanged("UpdatedAt");
					this.OnUpdatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessedPage", DbType="Int")]
		public System.Nullable<int> ProcessedPage
		{
			get
			{
				return this._ProcessedPage;
			}
			set
			{
				if ((this._ProcessedPage != value))
				{
					this.OnProcessedPageChanging(value);
					this.SendPropertyChanging();
					this._ProcessedPage = value;
					this.SendPropertyChanged("ProcessedPage");
					this.OnProcessedPageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
